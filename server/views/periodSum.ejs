<!DOCTYPE html>
<html>

<head>
    <script src="https://code.jquery.com/jquery-3.4.1.js"
        integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
</head>

<body>

    <div id='weekly'></div>
    <input type='button' id='periodBtn' value='조회' onclick='getPeriod()'>

    <div>
        <table width='1500px'>
            <tr>
                <td>No.</td>
                <td>제품코드</td>
                <td>제품명</td>
                <td>용량</td>
                <td>재고</td>
                <td>반품</td>
                <td>본사</td>
                <td>기타</td>
                <td>판매</td>
                <td>본사</td>
                <td>기타</td>
                <td>과도</td>
                <td>부족</td>
                <td>실수량</td>
            </tr>
            <tbody id='tblShow'>

            </tbody>
        </table>
    </div>
</body>
<!-- <script src='/javascripts/period.js'></script> -->
<script src='/javascripts/weekly.js'></script>

<script>
    $(document).ready(() => {
        var now = new Date();
        var startDay = 1; //0=sunday, 1=monday etc.
        var d = now.getDay(); //get the current day
        var weekStart = new Date(now.valueOf() - (d <= 0 ? 7 - startDay : d - startDay) * 86400000); //rewind to start day
        var weekEnd = new Date(weekStart.valueOf() + 6 * 86400000); //add 6 days to get last day
        weekly(weekStart, weekEnd);
    });
    getPeriod = async () => {
        var cell = document.getElementById('tblShow');
        while (cell.hasChildNodes()) {
            cell.removeChild(cell.firstChild);
        }

        var sdata = document.getElementById('ddate').childNodes[1].textContent;
        var edata = document.getElementById('ddate').childNodes[3].textContent;

        try {
            const response = await fetch('http://localhost:3000/getPeriodData', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ sDate: sdata, eDate: edata })
            });

            var json = await response.json();
            console.log(json)
            if (response.ok) {
                var objRow;
                for (var i = 0; i < json.length; i++) {
                    objRow = document.all('tblShow').insertRow();

                    //No.
                    var objCell_Num = objRow.insertCell();
                    objCell_Num.innerHTML = i + 1;

                    //Product Code
                    var objCell_Code = objRow.insertCell();
                    objCell_Code.innerHTML = json[i].itemCode;

                    //Product Name
                    var objCell_Name = objRow.insertCell();
                    objCell_Name.innerHTML = json[i].itemName;

                    //Product Capacity(Volume)
                    var objCell_Cp = objRow.insertCell();
                    objCell_Cp.innerHTML = json[i].itemVolume;

                    //Product Stocks Count
                    var objCell_sCnt = objRow.insertCell();
                    objCell_sCnt.innerHTML = json[i].qty.prestocks;

                    //Product Recall Count
                    var objCell_rCnt = objRow.insertCell();
                    objCell_rCnt.innerHTML = json[i].qty.recall;

                    //Product holdings1 Count
                    var objCell_hCnt1 = objRow.insertCell();
                    objCell_hCnt1.innerHTML = json[i].qty.holdings1;

                    //Product etc1 Count
                    var objCell_eCnt1 = objRow.insertCell();
                    objCell_eCnt1.innerHTML = json[i].qty.etc1;

                    //Product sell Count
                    var objCell_seCnt = objRow.insertCell();
                    objCell_seCnt.innerHTML = json[i].qty.sell;

                    //Product holdings2 Count
                    var objCell_hCnt2 = objRow.insertCell();
                    objCell_hCnt2.innerHTML = json[i].qty.holdings2;

                    //Product etc2 Count
                    var objCell_eCnt2 = objRow.insertCell();
                    objCell_eCnt2.innerHTML = json[i].qty.etc2;

                    //Product over Count
                    var objCell_oCnt = objRow.insertCell();
                    objCell_oCnt.innerHTML = json[i].qty.over;

                    //Product lack Count
                    var objCell_lCnt = objRow.insertCell();
                    objCell_lCnt.innerHTML = json[i].qty.lack;

                    //Product Real Count
                    var objCell_rCnt = objRow.insertCell();
                    objCell_rCnt.innerHTML = (json[i].qty.prestocks + json[i].qty.recall + json[i].qty.holdings1 + json[i].qty.etc1) - (json[i].qty.sell + json[i].qty.holdings2 + json[i].qty.etc2) + json[i].qty.over - json[i].qty.lack;
                }
            }
        } catch (err) {
            console.log(err)
        }
    }
</script>
<style>

</style>

</html>