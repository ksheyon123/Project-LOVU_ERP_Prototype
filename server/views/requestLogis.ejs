<!DOCTYPE html>
<html>

<head>
    <script src="https://code.jquery.com/jquery-3.4.1.js"
        integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
    <script>
        paging = async (json, totalData, dataPerPage, pageCount, currentPage) => {

            var totalPage = Math.ceil(totalData / dataPerPage);    // 총 페이지 수
            var pageGroup = Math.ceil(currentPage / pageCount);    // 페이지 그룹

            var last = pageGroup * pageCount;    // 화면에 보여질 마지막 페이지 번호
            if (last > totalPage) last = totalPage;
            var first = last - (pageCount - 1);    // 화면에 보여질 첫번째 페이지 번호
            var next = last + 1;
            var prev = first - 1;

            var $pingingView = $("#paging");

            var html = "";

            if (prev > 0)
                html += "<a href=# id='prev'><</a> ";

            for (var i = first; i <= last; i++) {
                html += "<a href='#' id=" + i + ">" + i + "</a> ";
            }

            if (last < totalPage)
                html += "<a href=# id='next'>></a>";

            $("#paging").html(html);    // 페이지 목록 생성
            $("#paging a").css("color", "black");
            $("#paging a#" + currentPage).css({
                "text-decoration": "none",
                "color": "red",
                "font-weight": "bold"
            });    // 현재 페이지 표시
            var st = (currentPage - 1) * 10;
            if (currentPage * 10 > totalData) {
                
                var en = totalData;
                for (var i = st; i < totalData; i++) {

                    objRow = document.all('resTblShow').insertRow();

                    var objCell_Num = objRow.insertCell();
                    objCell_Num.innerHTML = i + 1;
                    var objCell_Code = objRow.insertCell();
                    objCell_Code.innerHTML = json[i][0];
                    var objCell_Name = objRow.insertCell();
                    objCell_Name.innerHTML = json[i][1];
                    var objCell_Cp = objRow.insertCell();
                    objCell_Cp.innerHTML = json[i][2];
                }
            } else {
                for (var i = st; i < currentPage * 10; i++) {

                    objRow = document.all('resTblShow').insertRow();

                    var objCell_Num = objRow.insertCell();
                    objCell_Num.innerHTML = i + 1;
                    var objCell_Code = objRow.insertCell();
                    objCell_Code.innerHTML = json[i][0];
                    var objCell_Name = objRow.insertCell();
                    objCell_Name.innerHTML = json[i][1];
                    var objCell_Cp = objRow.insertCell();
                    objCell_Cp.innerHTML = json[i][2];
                }
            }

            $("#paging a").click(function () {
                var cell = document.getElementById('resTblShow');
                console.log('cell', cell)
                while (cell.hasChildNodes()) {
                    cell.removeChild(cell.firstChild);
                }
                var $item = $(this);
                var $id = $item.attr("id");
                var selectedPage = $item.text();

                if ($id == "next") selectedPage = next;
                if ($id == "prev") selectedPage = prev;

                paging(json, totalData, dataPerPage, pageCount, selectedPage);
            });
        }
    </script>
</head>

<body>
    <h1>Dr.MEI Logistics</h1>
    <h2>닥터 메이 제품 출고 요청 페이지 입니다</h2>
    <br>
    <p>
        요청자 : <input type='text' name='incharge' id='incharge'>
    </p>
    <p>
        전화번호 : <input type='text' name='cphone' id='cphone'>
    </p>
    <p>
        출고일자 : <div name='deliverydate' id='deliverydate'></div>
    </p>
    <p>
        출고방법 : 직접수령<input type='radio' id='deliveryway' name='deliveryway' value='직접수령' checked> 택배<input type='radio'
            id='deliveryway' name='deliveryway' value='택배'>
    </p>

    <br>
    <br>
    <p>
        실구매자 : <input type='text' name='orderer' id='orderer'>
    </p>
    <p>
        전화번호 : <input type='text' name='ophone' id='ophone'>
    </p>
    <p>
        업체명 : <input type='text' name='companyname' id='companyname'>
    </p>
    <p>
        주소 : <input type='text' name='address' id='address'>
    </p>
    <p>
        제품 코드 : <div id='item_code'></div>
        제품명 : <div id='item_nm'></div>
        제품 용량 : <div id='item_cp'></div>
        제품 수량 : <input type='text' name='item_cnt' id='item_cnt'>

        <input type='button' id='item' name='item' value='상품 조회'>
    </p>
    <p>
        <button type='button' id='addBtn' name='addBtn' onclick='addOrderList()'>상품 추가</button>
        <button type='button' id='deleteBtn' name='deleteBtn' onclick='deleteOrderList()'>상품 제거</button>
    </p>
    <div>
        <table width='600px'>
            <tr>
                <td>No.</td>
                <td>제품코드</td>
                <td>제품명</td>
                <td>용량</td>
                <td>수량</td>
                <td>요청자</td>
                <td>요청자 전화번호</td>
                <td>출고일자</td>
                <td>출고방법</td>
                <td>실구매자</td>
                <td>구매자 전화번호</td>
                <td>업체명</td>
                <td>주소</td>
            </tr>
            <tbody id='tblShow'>

            </tbody>
        </table>
    </div>
    <p>
        <button type='button' id='requestBtn' name='requestBtn' onclick='putRequestToDB()'>출고 요청</button>
    </p>
</body>

<!-- Modal For Searching Item -->
<div id="searchBox" class="modal">
    <!-- Modal content -->
    <div class="searchBox-content">
        <span class="close">&times;</span>
        <p>
            <input type='text' id='searchitem' name='searchitem'>
            <button id='requestItemListBtn' onclick='requestItemList()'>조회</button>

            <div id='responseitem'></div>
            <div>
                <table width='500px'>
                    <tr>
                        <td>No.</td>
                        <td>제품코드</td>
                        <td>제품명</td>
                        <td>용량</td>
                    </tr>
                    <tbody id='resTblShow'>

                    </tbody>
                </table>
            </div>
            <div class='pagination-wrapper clearfix'>
                <ul class='pagination float--right' id='paging'>

                </ul>
            </div>

        </p>
    </div>
</div>
<script src='/javascripts/searchboxModal.js'></script>
<script src='/javascripts/adddelete_req.js'></script>
<script>
    var count = 0;
    var date = new Date();
    var year = date.getFullYear();
    var month = date.getMonth() + 1;
    var day = date.getDate();
    var today = year + '-' + month + '-' + day;

    var date = document.getElementById('deliverydate');
    date.innerHTML = today;

    requestItemList = async () => {
        var searchItem = document.getElementById('searchitem').value;
        var responseItem = document.getElementById('responseitem');
        var index = document.getElementById('indexNum');
        var objRow;
        const response = await fetch('http://localhost:3000/requestItemList', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ searchItem: searchItem })
        })

        var json = await response.json();
        console.log('json', json)
        if (response.ok) {
            if (json[0] == undefined) {
                window.alert('조회한 제품이 존재하지 않습니다')
            } else {

                var maxPage = json.length;
                paging(json, maxPage, 10, 5, 1)
                // for (var i = 1; i <= maxPage; i++) {
                //     var newSpan = document.createElement('span');
                //     newSpan.innerHTML = "<input type='button' value='" + `${i}` + "'>";
                //     var data = newSpan;
                //     index.append(data);
                // }

                // for (var i = 0; i < json.length; i++) {
                //     objRow = document.all('resTblShow').insertRow();

                //     var objCell_Num = objRow.insertCell();
                //     objCell_Num.innerHTML = i + 1;
                //     var objCell_Code = objRow.insertCell();
                //     objCell_Code.innerHTML = json[i][0];
                //     var objCell_Name = objRow.insertCell();
                //     objCell_Name.innerHTML = json[i][1];
                //     var objCell_Cp = objRow.insertCell();
                //     objCell_Cp.innerHTML = json[i][2];
                // }
            }
        }
    }

    putRequest = (data) => {
        var item_nm = document.getElementById('item_nm')
        var item_cp = document.getElementById('item_cp')
        var item_code = document.getElementById('item_code')
        item_code.innerHTML = data[0];
        item_nm.innerHTML = data[1];
        item_cp.innerHTML = data[2];

        var cell = document.getElementById('responseitem');
        while (cell.hasChildNodes()) {
            cell.removeChild(cell.firstChild);
        }
    }

    putRequestToDB = async () => {
        try {
            var tblContent = document.getElementById('tblShow');
            var tblData = tblContent.childNodes;
            var array = new Array();

            if (tblContent.rows.length == 0) {
                window.alert('주문을 요청할 상품을 기록해주세요')
            } else {
                for (var i = 1; i < tblData.length; i++) {
                    var cellCode = tblData[i].cells[1].getElementsByTagName('input')[0].value;
                    var cellRt = tblData[i].cells[5].getElementsByTagName('input')[0].value;
                    var cellRtp = tblData[i].cells[6].getElementsByTagName('input')[0].value;
                    var cellDate = tblData[i].cells[7].getElementsByTagName('input')[0].value;
                    var cellDway = tblData[i].cells[8].getElementsByTagName('input')[0].value;
                    var cellOrd = tblData[i].cells[9].getElementsByTagName('input')[0].value;
                    var cellOrdp = tblData[i].cells[10].getElementsByTagName('input')[0].value;
                    var celCmy = tblData[i].cells[11].getElementsByTagName('input')[0].value;
                    var cellAddr = tblData[i].cells[12].getElementsByTagName('input')[0].value;

                    array.push({ cellCode: cellCode, cellRt: cellRt, cellRtp: cellRtp, cellDate: cellDate, cellDway: cellDway, cellOrd: cellOrd, cellOrdp: cellOrdp, cellCmy: cellCmy, cellAddr: cellAddr })
                }

                const response = await fetch('http://localhost:3000/putRequestLogisToDB', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ data: array })
                })

                if (response.ok) {
                    window.alert('주문이 요청되었습니다')
                    location.reload();
                }
            }
        } catch (err) {
            window.alert('Err!!')
        }
    }


</script>
<style>
    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f6f6f6;
        min-width: 230px;
        overflow: auto;
        border: 1px solid #ddd;
        z-index: 1;
    }

    .show {
        display: block;
    }

    .modal,
    .inventory_modal {
        display: none;
        /* Hidden by default */
        position: fixed;
        /* Stay in place */
        z-index: 1;
        /* Sit on top */
        padding-top: 100px;
        /* Location of the box */
        left: 0;
        top: 0;
        width: 100%;
        /* Full width */
        height: 100%;
        /* Full height */
        overflow: auto;
        /* Enable scroll if needed */
        background-color: rgb(0, 0, 0);
        /* Fallback color */
        background-color: rgba(0, 0, 0, 0.4);
        /* Black w/ opacity */
    }

    /* Modal Content */
    .searchBox-content,
    .inventoryBox-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
    }
</style>

</html>