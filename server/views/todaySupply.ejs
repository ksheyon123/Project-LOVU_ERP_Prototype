<!DOCTYPE html>
<html>
    <head>
        <script
        src="https://code.jquery.com/jquery-3.4.1.js"
        integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU="
        crossorigin="anonymous"></script>

    </head>
    <body>
        <h1>금일 입고 제품을 기입해주세요</h1>
        
        <div>
                입고 일자 : <div id='date'></div>
            </p>
            <p>
                제품명 : <input type='button' id='item' name='item' value='상품 조회'>
                <div id='item_nm'></div>
            </p>
            <p>
                제품코드 : 
                <div id='item_code'></div>
            </p>
            <p>
                용량 : 
                <div id='item_cp'></div>
            </p>
            <p>
                수량 : <input type='text' id='item_cnt' name='item_cnt' value=''>
            </p>
            <p>
                금액 : <input type='text' id='item_price' name='item_price' value=''>
            </p>
            <p>
                요청자 : <input type='text' id='item_rt' name='item_rt' value=''>
            </p>
            <p>
                구분 : 
                반품<input type='radio' id='item_dnt1' name='item_dnt' value='반품' checked>
                본사<input type='radio' id='item_dnt2' name='item_dnt' value='본사'>
                기타<input type='radio' id='item_dnt3' name='item_dnt' value='기타'>
            </p>
            <p>
                결제수단 : 
                현금<input type='radio' id='item_pmt1' name='item_pmt' value='현금' checked>
                카드<input type='radio' id='item_pmt2' name='item_pmt' value='카드'>
                외상<input type='radio' id='item_pmt3' name='item_pmt' value='외상'>
            </p>
            <p>
                공급자 :
                <input type='text' id='item_sup' name='item_sup' value=''>
            </p>
            <p>
                비고 :
                <input type='text' id='item_void' name='item_void' value=''>
            </p>
        </div>
        <div>
            <p>
                <button type='button' id='addBtn' name='addBtn' onclick='addOrderList()'>상품 추가</button>
                <button type='button' id='deleteBtn' name='deleteBtn' onclick='deleteOrderList()'>상품 제거</button>
            </p>
        </div>
        <div>
            <table width='1500px'>
                <tr>
                    <td>No.</td>
                    <td>제품코드</td>
                    <td>제품명</td>
                    <td>용량</td>
                    <td>수량</td>
                    <td>금액</td>
                    <td>요청자</td>
                    <td>구분</td>
                    <td>결제수단</td>
                    <td>공급자</td>
                    <td>비고</td>
                </tr>
                <tbody id='tblShow'>

                </tbody>
            </table>
        </div>
        <p>
            <button type='button' id='requestBtn' name='requestBtn' onclick='putSupplyList()'>입고</button>
        </p>
        <hr>
        <!-- From Here For Request pre-exist items which enrolled before-->
        <p>
            <h2>입고 제품 리스트</h2>
        </p>

        <h3>제품 명 및 기간 조회</h3>
        날짜 : 
        <select id="start_year" name="start_year">
        </select>
        <select id="start_month" name="start_month">
        </select>
        <select id="start_day" name="start_day">
        </select>	~
        <select id="end_year" name="end_year">
        </select>
        <select id="end_month" name="end_month">
        </select>	
        <select id="end_day" name="end_day">
        </select>
        <p>
            제품 명 : <div id='preSuppliedItemName'></div>
            제품 코드 : <div id='preSuppliedItemCode'></div>
            <button type='button' id='inventory'>제품 조회</button>
        </p>
        <button type='button' onclick='preSuppliedList()'>조회</button>
        <div id='itemsList'></div>
        

        <div>
            <table width='1500px'>
                <tr>
                    <td>No.</td>
                    <td>날짜</td>
                    <td>제품코드</td>
                    <td>제품명</td>
                    <td>용량</td>
                    <td>반품</td>
                    <td>구매</td>
                    <td>기타</td>
                </tr>
                <tbody id='resTblShow'>

                </tbody>
            </table>
        </div>
        <!-- Modal For Searching Item -->
        <div id="searchBox" class="modal">
            <!-- Modal content -->
            <div class="searchBox-content">
                <span class="close">&times;</span>
                <p>
                    <input type='text' id='searchitem' name='searchitem'>
                    <button id='requestItemListBtn' onclick='requestItemList()'>조회</button>

                    <div id='responseitem'></div>
                </p>
            </div>
        </div>
        
        <!-- Modal For Request Inventory Item -->
        <div id="inventoryBox" class="inventory_modal">
                <!-- Modal content -->
            <div class="inventoryBox-content">
                <span class="close">&times;</span>
                <p>
                    <input type='text' id='inventitemname' name='inventitemname' value=''>
                    <button id='requestInventoryItemListBtn' onclick='requestInventItemList()'>조회</button>

                    <div id='resinventitem'></div>
                </p>
            </div>
        </div>
    
    
    </body>
    <script src='/javascripts/searchboxModal.js'></script>
    <script src='/javascripts/requestboxModal.js'></script>
    <script src='/javascripts/period.js'></script>
    <script src='/javascripts/adddelete.js'></script>


    <script>
        var count = 0;
        var date = new Date();
        var year = date.getFullYear();
        var month = date.getMonth() + 1;
        var day = date.getDate();
        var today = year + '-' + month + '-' + day;

        var date = document.getElementById('date');
        date.innerHTML = today;

        requestItemList = async () => {
            var searchItem = document.getElementById('searchitem').value;
            var responseItem = document.getElementById('responseitem');
            const response = await fetch ('http://172.30.1.23:3000/requestItemList', {
                method: 'POST',
                headers : {
                    'Content-Type': 'application/json'
                },
                body : JSON.stringify({ searchItem : searchItem })
            })
            
            var json = await response.json();
            if (response.ok) {
                if(json[0] == undefined) {
                    window.alert('조회한 제품이 존재하지 않습니다')
                } else {   
                    for (var i = 0; i < json.length; i++) {
                        var newP = document.createElement('p');
                        newP.innerHTML = "<button type='button' onclick='putRequest(" +`${JSON.stringify(json[i])}` + ")'>" + "선택" + "</button>" + json[i][1];
                        var data = newP;
                        responseItem.append(data);
                    }
                }
            }
        }

        putRequest = (data) => {
            var item_nm = document.getElementById('item_nm')
            var item_cp = document.getElementById('item_cp')
            var item_code = document.getElementById('item_code')
            item_code.innerHTML = data[0];
            item_nm.innerHTML = data[1];
            item_cp.innerHTML = data[2];
        }

        //Put Supply List To Database
        putSupplyList = async () => {
            try {
                var tblContent = document.getElementById('tblShow');
                var date = document.getElementById('date').childNodes[0].textContent;
                var tblData = tblContent.childNodes;
                var array = new Array();
                if (tblContent.rows.length == 0) {
                    window.alert('출고를 요청할 상품이 없습니다')
                } else {
                    for (var i = 1; i < tblData.length; i++) {
                        if (tblData[i].cells[1].childNodes[0] == undefined) {
                            console.log(i)
                        }
                        var cellCode = tblData[i].cells[1].childNodes[0].textContent;
                        var cellCnt = tblData[i].cells[4].childNodes[0].textContent;
                        var cellPrice = tblData[i].cells[5].childNodes[0].textContent;
                        var cellRt = tblData[i].cells[6].childNodes[0].textContent;
                        var cellDnt = tblData[i].cells[7].childNodes[0].textContent;
                        var cellPmt = tblData[i].cells[8].childNodes[0].textContent;
                        var cellSup = tblData[i].cells[9].childNodes[0].textContent;
                        var cellVoid = tblData[i].cells[10].childNodes[0].textContent;

                        array.push({date : date, cellCode : cellCode, cellCnt : cellCnt, cellPrice : cellPrice, cellRt : cellRt, cellDnt : cellDnt, cellPmt : cellPmt, cellSup : cellSup, cellVoid : cellVoid })
                    }

                    const response = await fetch('http://172.30.1.23:3000/putSupplyRequestToDB', {
                        method: 'POST',
                        headers : {
                        'Content-Type' : 'application/json',
                        },
                        body : JSON.stringify({data : array})
                    })
                    
                    if (response.ok) {
                        window.alert('주문이 요청되었습니다')
                        location.reload();
                    }
                }
            } catch (err) {
                window.alert('Err!!')
            }
        }

    
        //Pre-Supplied Product List Request
        preSuppliedList = async () => {
            var startYear = $('#start_year option:selected').val();
            var startMonth = $('#start_month option:selected').val();
            var startDay = $('#start_day option:selected').val();
            var endYear = $('#end_year option:selected').val();
            var endMonth = $('#end_month option:selected').val();
            var endDay = $('#end_day option:selected').val();
            var itemCode = document.getElementById('preSuppliedItemCode');

            if (itemCode.childNodes[0] == undefined) {
                itemCode = null;
            } else {
                itemCode = itemCode.childNodes[0].textContent;
            }

            try {
                const response  = await fetch ('http://172.30.1.23:3000/requestPreSuppliedList', {
                    method : 'POST',
                    headers : {
                        'Content-Type': 'application/json'
                    },
                    body : JSON.stringify({startYear : startYear, startMonth : startMonth, startDay : startDay, endYear : endYear, endMonth : endMonth, endDay : endDay, itemCode: itemCode})
                })
                var json = await response.json();

                if (response.ok) {
                    window.alert('조회되었습니다')
                    for (var i = 0; i < json.length; i++) {
                        var row_date = json[i].date; 
                        var row_nm = json[i].items.itemName;
                        var row_code = json[i].items.itemCode;
                        var row_cp = json[i].items.itemVolume;
                        var row_rcnt = json[i].items.objset.recall.qty;
                        var row_hcnt = json[i].items.objset.holdings.qty;
                        var row_ecnt = json[i].items.objset.etc.qty;
                        

                        var objRow;
                        objRow = document.all('resTblShow').insertRow();

                        //No.
                        var objCell_Num = objRow.insertCell();
                        objCell_Num.innerHTML = i + 1;

                        //Input Date
                        var objCell_Date = objRow.insertCell();
                        objCell_Date.innerHTML = row_date;

                        //Product Code
                        var objCell_Code = objRow.insertCell();
                        objCell_Code.innerHTML = row_code;

                        //Product Name
                        var objCell_Name = objRow.insertCell();
                        objCell_Name.innerHTML = row_nm;

                        //Product Capacity(Volume)
                        var objCell_Cp = objRow.insertCell();
                        objCell_Cp.innerHTML = row_cp;

                        //Product Recall Count
                        var objCell_rCnt= objRow.insertCell();
                        objCell_rCnt.innerHTML = row_rcnt;
                        
                        //Product Recall Count
                        var objCell_hCnt= objRow.insertCell();
                        objCell_hCnt.innerHTML = row_hcnt;
                        
                        //Product Recall Count
                        var objCell_eCnt= objRow.insertCell();
                        objCell_eCnt.innerHTML = row_ecnt;
                    }
                }
            } catch (err) {
                window.alert('Warning!!')
            }
        }      


        requestInventItemList = async () => {
            var inventItem = document.getElementById('inventitemname').value;
            var responseItem = document.getElementById('resinventitem');
            const response = await fetch ('http://172.30.1.23:3000/requestItemList', {
                method: 'POST',
                headers : {
                    'Content-Type': 'application/json'
                },
                body : JSON.stringify({ searchItem : inventItem })
            })
            
            var json = await response.json();
            console.log('json', json[0])
            if (response.ok) {
                if(json[0] == undefined) {
                    window.alert('조회한 제품이 존재하지 않습니다')
                } else {   
                    for (var i = 0; i < json.length; i++) {
                        var newP = document.createElement('p');
                        newP.innerHTML = "<button type='button' onclick='putInventory(" +`${JSON.stringify(json[i])}` + ")'>" + "선택" + "</button>" + json[i][1];
                        var data = newP;
                        responseItem.append(data);
                    }
                }
            }
        }

        putInventory = (data) => {
            var item_nm = document.getElementById('preSuppliedItemName')
            var item_code = document.getElementById('preSuppliedItemCode')
            item_code.innerHTML = data[0];
            item_nm.innerHTML = data[1];
        }
    </script>

    <style>
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f6f6f6;
            min-width: 230px;
            overflow: auto;
            border: 1px solid #ddd;
            z-index: 1;
        }
        .show {
            display: block;
        }
        .modal, .inventory_modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        /* Modal Content */
        .searchBox-content, .inventoryBox-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        /* The Close Button */
        .close {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</html>